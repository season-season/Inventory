/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pharmacy;

import java.awt.Component;
import java.awt.Container;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import static mondrian.olap.fun.vba.Vba.date;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author Sparrow
 */
public class inventory extends javax.swing.JFrame {

    /**
     * Creates new form inventory
     */
    public inventory() {
        initComponents();
        DbConnection.FillConnection();
        populateSupplier();
        populateCategory();
    inventoryfetch();
    }
 public void populateSupplier(){
        try{
            String sql = "SELECT *FROM supplier";
          PreparedStatement  pst = DbConnection.cn.prepareStatement(sql);
           ResultSet rs = pst.executeQuery();
            while(rs.next()){
                supplier.addItem(rs.getString("Supplier_name"));
            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
    }
public void populateCategory(){
    try{
            String sql1 = "SELECT *FROM category";
          PreparedStatement  pst1 = DbConnection.cn.prepareStatement(sql1);
           ResultSet rs1 = pst1.executeQuery();
            while(rs1.next()){
                category.addItem(rs1.getString("category"));
            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e);
        }
    }
 public void inventoryfetch(){
        try{
        String queryfetch="Select *from inventory";
        PreparedStatement psfetch=DbConnection.cn.prepareStatement(queryfetch);
        ResultSet rsfetch=psfetch.executeQuery();
        inventorytable.setModel(DbUtils.resultSetToTableModel(rsfetch));
                
                
    }
        catch(Exception e){
            
        }
        
    }

public void clearTextFields (Container container){

  for(Component c : container.getComponents()){
   if(c instanceof JTextField){
     JTextField f = (JTextField) c;
     f.setText("");
 } 
  else if (c instanceof Container)
     clearTextFields((Container)c);
}
}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField2 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        itemname = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        supplier = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        qty = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        costprice = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        sellingprice = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        category = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        purchasedate = new com.toedter.calendar.JDateChooser();
        Add = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        inventorytable = new javax.swing.JTable();
        id = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        searchitem = new javax.swing.JTextField();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu3 = new javax.swing.JMenu();
        jMenu4 = new javax.swing.JMenu();
        jMenu5 = new javax.swing.JMenu();
        jMenu6 = new javax.swing.JMenu();
        jMenu7 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        jMenu8 = new javax.swing.JMenu();
        jMenu9 = new javax.swing.JMenu();
        jMenu10 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("inventory");
        setMinimumSize(new java.awt.Dimension(1300, 900));
        getContentPane().setLayout(null);

        jLabel1.setText("Itemname:");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(36, 56, 90, 30);
        getContentPane().add(itemname);
        itemname.setBounds(120, 50, 120, 30);

        jLabel2.setText("Supplier:");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(40, 104, 50, 20);

        supplier.setMaximumRowCount(100);
        supplier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                supplierActionPerformed(evt);
            }
        });
        getContentPane().add(supplier);
        supplier.setBounds(120, 100, 120, 30);

        jLabel3.setText("Qty:");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(40, 140, 30, 20);
        getContentPane().add(qty);
        qty.setBounds(120, 140, 120, 30);

        jLabel4.setText("Costprice:");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(40, 180, 70, 30);
        getContentPane().add(costprice);
        costprice.setBounds(120, 180, 120, 30);

        jLabel5.setText("SellingPrice:");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(40, 230, 60, 20);
        getContentPane().add(sellingprice);
        sellingprice.setBounds(120, 220, 120, 30);

        jLabel6.setText("Category:");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(40, 270, 70, 14);

        category.setMaximumRowCount(100);
        getContentPane().add(category);
        category.setBounds(120, 260, 120, 30);

        jLabel7.setText("Purchase_Date:");
        getContentPane().add(jLabel7);
        jLabel7.setBounds(30, 310, 90, 20);
        getContentPane().add(purchasedate);
        purchasedate.setBounds(120, 300, 120, 30);

        Add.setText("Add");
        Add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddActionPerformed(evt);
            }
        });
        getContentPane().add(Add);
        Add.setBounds(120, 353, 80, 30);

        inventorytable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Itemname", "Supplier", "Qty", "Costprice", "Selling Price", "Category", "Purchase Date"
            }
        ));
        inventorytable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                inventorytableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(inventorytable);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(410, 72, 760, 360);

        id.setEnabled(false);
        getContentPane().add(id);
        id.setBounds(40, 20, 6, 20);

        jButton1.setText("Update");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(40, 350, 67, 30);

        jButton2.setText("Delete");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2);
        jButton2.setBounds(230, 353, 63, 30);

        jLabel8.setText("Search Item");
        getContentPane().add(jLabel8);
        jLabel8.setBounds(510, 20, 80, 30);

        searchitem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchitemKeyReleased(evt);
            }
        });
        getContentPane().add(searchitem);
        searchitem.setBounds(590, 20, 140, 30);

        jMenu1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/user-icon-1-20x20.gif"))); // NOI18N
        jMenu1.setText("Add User");
        jMenu1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu1MouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenu1);

        jMenu3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/stock.png"))); // NOI18N
        jMenu3.setText("Stock");
        jMenu3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu3MouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenu3);

        jMenu4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/sales.png"))); // NOI18N
        jMenu4.setText("Sales Report");
        jMenu4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu4MouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenu4);

        jMenu5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/category.gif"))); // NOI18N
        jMenu5.setText("Category");
        jMenu5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu5MouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenu5);

        jMenu6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/supp.png"))); // NOI18N
        jMenu6.setText("Supplier");
        jMenu6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu6MouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenu6);
        jMenuBar1.add(jMenu7);

        jMenu2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/customer.png"))); // NOI18N
        jMenu2.setText("Add customer");
        jMenu2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu2MouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenu2);

        jMenu8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/shop-cart-add-icon.png"))); // NOI18N
        jMenu8.setText("item");
        jMenu8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu8MouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenu8);

        jMenu9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/alret.png"))); // NOI18N
        jMenu9.setText("Alert Item");
        jMenu9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu9MouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenu9);

        jMenu10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Logout.png"))); // NOI18N
        jMenu10.setText("Logout");
        jMenu10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu10MouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenu10);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void AddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddActionPerformed
        // TODO add your handling code here:
        
        if (qty.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Please Insert Quantity");
            return;
        }
                
        
        if (itemname.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Please Insert Itemname");
            return;
        }
        if (sellingprice.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Please Insert Selling Price");
            return;
        }
        if (costprice.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Please Insert Cost Price");
            return;
        }
        if (purchasedate.getDate().equals("")) {
            JOptionPane.showMessageDialog(null, "Please Insert Date");
            return;
        }
        if (!qty.getText().matches("[0-9\\.|]*")) {
            JOptionPane.showMessageDialog(null, "Invalid Format : Qty");
            return;
        }
        
        
        
        if (!sellingprice.getText().matches("[0-9\\.|]*")) {
            JOptionPane.showMessageDialog(null, "Invalid Format : Selling Price");
            return;
        }
        
        
        
        if (!costprice.getText().matches("[0-9\\.|]*")) {
            JOptionPane.showMessageDialog(null, "Invalid Format : Cost Price");
            return;
        }
        
        int svp=Integer.parseInt(sellingprice.getText());
        int cvp=Integer.parseInt(costprice.getText());
        if(cvp> svp){
               JOptionPane.showMessageDialog(null, "Sellin price should be greater than cost");
         
        }
        
        
        
  try{
         String querycheck="Select *from inventory where itemname='"+itemname.getText()+"'";
    PreparedStatement pscheck=DbConnection.cn.prepareStatement(querycheck);
    ResultSet rs= pscheck.executeQuery();
    if(rs.next()){
        JOptionPane.showMessageDialog(null,"Sorry Item Already Exist");
    }
    else{
       java.util.Date ss= purchasedate.getDate();
      SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            String date=sdf.format(ss);
                String sqlinsert = "INSERT INTO inventory (itemname,supplier,qty,costprice,sellingprice,category,purchase_date) VALUES (?,?,?,?,?,?,?)";
                PreparedStatement ps= DbConnection.cn.prepareStatement(sqlinsert);
    ps.setString(1, itemname.getText());
    ps.setString(2, supplier.getSelectedItem().toString());
    ps.setString(3, qty.getText());
    ps.setString(4, costprice.getText());
    ps.setString(5, sellingprice.getText());
    ps.setString(6, category.getSelectedItem().toString());
    ps.setString(7, date.toString());
   ps.executeUpdate();
   JOptionPane.showMessageDialog(null, "Item Add SucessFully");
  
   clearTextFields(this.getContentPane());
    }
      } 
catch (Exception e)
        {
            JOptionPane.showMessageDialog(null, e);
        }
    
inventoryfetch();

    }//GEN-LAST:event_AddActionPerformed

    private void inventorytableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_inventorytableMouseClicked
        // TODO add your handling code here:
try{
        
     int row =inventorytable.getSelectedRow();
     
     String table_click1=(inventorytable.getValueAt(row, 0).toString());
    String quer="select *from inventory where id='"+table_click1+"'";
  PreparedStatement   ptsupdate = DbConnection.cn.prepareStatement(quer);
   ResultSet rstupdate=ptsupdate.executeQuery();
     
     if(rstupdate.next()){
         String ids= rstupdate.getString("id");
id.setText(ids);         
         
         String inam = rstupdate.getString("itemname");
         itemname.setText(inam);
         
         String supp = rstupdate.getString("supplier");
         supplier.setSelectedItem(supp);
 
        String qt = rstupdate.getString("qty");
         qty.setText(qt);
         
         String cp = rstupdate.getString("costprice");
         costprice.setText(cp);
 
         String sp = rstupdate.getString("sellingprice");
         sellingprice.setText(sp);
         
         String cat = rstupdate.getString("category");
         category.setSelectedItem(cat);
 
          java.util.Date ss1= rstupdate.getDate("purchase_date");
       purchasedate.setDate(ss1);
         
       
 
         
     
     }
            
        }
        catch(Exception ex){
            JOptionPane.showMessageDialog(null, ex);
        }











    }//GEN-LAST:event_inventorytableMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
                                          







    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        // TODO add your handling code here:
        java.util.Date ss2= purchasedate.getDate();
      SimpleDateFormat sdf2 = new SimpleDateFormat("yyyy-MM-dd");
            String date1=sdf2.format(ss2);

        try {

       String querycheckupdate="Select *from inventory where itemname='"+itemname.getText()+"' and id!='"+id.getText()+"'";
    PreparedStatement pscheckupdate=DbConnection.cn.prepareStatement(querycheckupdate);
    ResultSet rsupdate= pscheckupdate.executeQuery();
    
    
    if(rsupdate.next()){
        
        
        JOptionPane.showMessageDialog(null,"Sorry Usename Already Exist");
    }
    else{
       
       String value1 = id.getText();
        String value2 = itemname.getText();
        String value3 = supplier.getSelectedItem().toString();
        String value4 = qty.getText();
        String value5 = costprice.getText();
        String value6 = sellingprice.getText();
        String value7 = category.getSelectedItem().toString();
        String value8=date1.toString();
        
      String queryupuser="update inventory set id='"+value1+"', itemname='"+value2+"',supplier='"+value3+"',qty='"+value4+"',costprice='"+value5+"',sellingprice='"+value6+"',category='"+value7+"',purchase_date='"+value8+"' where  id='"+value1+"'";
       PreparedStatement psupuser = DbConnection.cn.prepareStatement(queryupuser);
            psupuser.executeUpdate();
             JOptionPane.showMessageDialog(null, "data updated sucessfully");
    }
        }
        catch(Exception e){
JOptionPane.showMessageDialog(null, e);            
        }
    
inventoryfetch();  
        
    }//GEN-LAST:event_jButton1MouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        
        try{
             String querydel="Delete from  inventory where id=?";
             PreparedStatement psdel = DbConnection.cn.prepareStatement(querydel);
             psdel.setString(1,id.getText());
             psdel.execute();
             JOptionPane.showMessageDialog(null, "data deleted sucessfully");
        }
        catch(SQLException ex){
            JOptionPane.showMessageDialog(null, ex);
        }
        inventoryfetch();  
   clearTextFields(this.getContentPane());
        

                                            


    }//GEN-LAST:event_jButton2ActionPerformed

    private void searchitemKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchitemKeyReleased
        // TODO add your handling code here:
                        try{
            
      String st=searchitem.getText().replaceAll(" ", "");
; 
     String quer="select *from inventory where itemname like '"+st+"%'";
     
 PreparedStatement   ptsearch = DbConnection.cn.prepareStatement(quer);
 
  

 
  ResultSet rstsearch = ptsearch.executeQuery();
            inventorytable.setModel(DbUtils.resultSetToTableModel(rstsearch));
    
   
    }                
                
                
         
            
        
    catch(Exception ex){
            JOptionPane.showMessageDialog(null, ex);
    
   }
        

        
        
        
        
        
        
        
        
        
        
        
    }//GEN-LAST:event_searchitemKeyReleased

    private void supplierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_supplierActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_supplierActionPerformed

    private void jMenu1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu1MouseClicked
        // TODO add your handling code here:
        this.setVisible(false);
        adduser add = new adduser();
        add.setVisible(true);
    }//GEN-LAST:event_jMenu1MouseClicked

    private void jMenu3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu3MouseClicked
        // TODO add your handling code here:
        this.setVisible(false);
        inventory iv = new inventory();
        iv.setVisible(true);

    }//GEN-LAST:event_jMenu3MouseClicked

    private void jMenu4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu4MouseClicked
        // TODO add your handling code here:

        salesreport sl = new salesreport();
        sl.setVisible(true);

    }//GEN-LAST:event_jMenu4MouseClicked

    private void jMenu5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu5MouseClicked
        // TODO add your handling code here:
        this.setVisible(false);
        category ct = new category();
        ct.setVisible(true);
    }//GEN-LAST:event_jMenu5MouseClicked

    private void jMenu6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu6MouseClicked
        // TODO add your handling code here:
        this.setVisible(false);
        supplier sp=new supplier();
        sp.setVisible(true);
    }//GEN-LAST:event_jMenu6MouseClicked

    private void jMenu2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu2MouseClicked
        // TODO add your handling code here:
        this.setVisible(false);
        customer cs=new customer();
        cs.setVisible(true);
    }//GEN-LAST:event_jMenu2MouseClicked

    private void jMenu8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu8MouseClicked
        // TODO add your handling code here:
        this.setVisible(false);
        itm it=new itm();
        it.setVisible(true);
    }//GEN-LAST:event_jMenu8MouseClicked

    private void jMenu9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu9MouseClicked
        // TODO add your handling code here:
        alretunit al= new alretunit();
        al.setVisible(true);

    }//GEN-LAST:event_jMenu9MouseClicked

    private void jMenu10MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu10MouseClicked
        // TODO add your handling code here:
        this.setVisible(false);
        login lg = new login();
        lg.setVisible(true);

    }//GEN-LAST:event_jMenu10MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(inventory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(inventory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(inventory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(inventory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new inventory().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Add;
    private javax.swing.JComboBox<String> category;
    private javax.swing.JTextField costprice;
    private javax.swing.JTextField id;
    private javax.swing.JTable inventorytable;
    private javax.swing.JTextField itemname;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu10;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenu jMenu6;
    private javax.swing.JMenu jMenu7;
    private javax.swing.JMenu jMenu8;
    private javax.swing.JMenu jMenu9;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField2;
    private com.toedter.calendar.JDateChooser purchasedate;
    private javax.swing.JTextField qty;
    private javax.swing.JTextField searchitem;
    private javax.swing.JTextField sellingprice;
    private javax.swing.JComboBox<String> supplier;
    // End of variables declaration//GEN-END:variables
}
